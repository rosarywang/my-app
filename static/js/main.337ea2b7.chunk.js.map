{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","slice","setState","concat","status","current","winner","moves","map","step","move","desc","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"sNAIA,SAASA,EAAOC,GACZ,OACA,wBAAQC,UAAU,SAASC,QAAUF,EAAME,QAA3C,SACKF,EAAMG,QAKb,SAASC,EAAgBC,GAWrB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CAAC,IAAD,cAChBD,EAAMC,GADU,GAC3BE,EAD2B,KACxBC,EADwB,KACrBC,EADqB,KAElC,GAAGN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACjE,OAAON,EAAQI,GAGvB,OAAO,K,IAGLG,E,2KAESL,GAAI,IAAD,OACd,OAAQ,cAACR,EAAD,CACNI,MAAOU,KAAKb,MAAMK,QAAQE,GAC1BL,QAAS,kBAAM,EAAKF,MAAME,QAAQK,Q,+BAIpC,OACE,gCACE,sBAAKN,UAAU,YAAf,UACGY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAErB,sBAAKb,UAAU,YAAf,UACGY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAErB,sBAAKb,UAAU,YAAf,UACGY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,a,GAxBTC,IAAMC,WA+BpBC,E,kDACJ,WAAYjB,GAAO,IAAD,8BACd,cAAMA,IACDkB,MAAQ,CACTC,QAAS,CAAC,CACNd,QAASe,MAAM,GAAGC,KAAK,QAE3BC,SAAS,GANC,E,wDAUNf,GACR,IAAMY,EAAUN,KAAKK,MAAMC,QAErBd,EADUc,EAAQA,EAAQX,OAAS,GACjBH,QAAQkB,QAC7BnB,EAAgBC,IAAYA,EAAQE,KAIvCF,EAAQE,GAAKM,KAAKK,MAAMI,QAAU,IAAM,IACxCT,KAAKW,SAAS,CACVL,QAASA,EAAQM,OAAO,CAAC,CACrBpB,QAAQA,KAEZiB,SAAUT,KAAKK,MAAMI,a,+BAInB,IAgBFI,EAhBC,OACCP,EAAUN,KAAKK,MAAMC,QACrBQ,EAAUR,EAAQA,EAAQX,OAAS,GACnCoB,EAASxB,EAAgBuB,EAAQtB,SAEjCwB,EAAQV,EAAQW,KAAI,SAACC,EAAMC,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACJ,OACI,6BACI,wBAAQ9B,QAAS,kBAAM,EAAKgC,OAAOF,IAAnC,SAA2CC,SAYvD,OALIP,EADDE,EACU,WAAaA,EAEb,iBAAmBf,KAAKK,MAAMI,QAAU,IAAK,KAItD,sBAAKrB,UAAU,OAAf,UACA,qBAAKA,UAAU,aAAf,SACI,cAACW,EAAD,CACIP,QAASsB,EAAQtB,QACjBH,QAAS,SAACK,GAAD,OAAO,EAAK4B,YAAY5B,QAGzC,sBAAKN,UAAU,YAAf,UACI,8BAAMyB,IACN,6BAAKG,c,GA7DAd,IAAMC,WAsEzBoB,IAASC,OACP,cAACpB,EAAD,IACAqB,SAASC,eAAe,W","file":"static/js/main.337ea2b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n    <button className=\"square\" onClick={ props.onClick }>\r\n        {props.value}\r\n    </button>\r\n    );\r\n  }\r\n\r\n  function calculateWinner(squares) {\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n      ];\r\n      for (let i = 0; i < lines.length; i++){\r\n          const [a, b, c] = lines[i];\r\n          if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n              return squares[a];\r\n          }\r\n      }\r\n      return null;\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n      return (<Square \r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}/>);\r\n    }   \r\n  \r\n    render() {  \r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null)\r\n            }],\r\n            xIsNext: true\r\n        };\r\n    }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if(calculateWinner(squares) || squares[i]){\r\n            return;\r\n        }\r\n        \r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares:squares\r\n            }]),\r\n            xIsNext: !this.state.xIsNext,\r\n        });            \r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move?\r\n                'Go to move #' + move:\r\n                'Go to game start';\r\n            return (\r\n                <li>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if(winner){\r\n            status = 'Winner: ' + winner;\r\n        } else{\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X': 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n            <div className=\"game-board\">\r\n                <Board \r\n                    squares={current.squares}\r\n                    onClick={(i) => this.handleClick(i)}\r\n                />\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{status}</div>\r\n                <ol>{moves}</ol>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  "],"sourceRoot":""}